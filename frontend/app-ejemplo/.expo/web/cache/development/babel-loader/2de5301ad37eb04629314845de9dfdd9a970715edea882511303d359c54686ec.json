{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatGPT = function ChatGPT() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var apiKey = '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';\n  var apiUrl = 'https://api.openai.com/v1/completions';\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textInput = _useState4[0],\n    setTextInput = _useState4[1];\n  var handleSend = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var prompt = textInput;\n      try {\n        var response = yield axios.post(apiUrl, {\n          prompt: prompt,\n          max_tokens: 100,\n          temperature: 1\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + apiKey\n          }\n        });\n        var text = response.data.choices[0].text;\n        setData([].concat(_toConsumableArray(data), [{\n          type: 'user',\n          text: textInput\n        }, {\n          type: 'bot',\n          text: text\n        }]));\n        setTextInput('');\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          console.log('Llegaste al límite. Espera por favor.');\n          yield wait(10000);\n          handleSend();\n        } else {\n          console.error('Error:', error);\n        }\n      }\n    });\n    return function handleSend() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var wait = function wait(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Hola soy un chat\"\n    }), _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      style: styles.body,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            padding: 10\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontWeight: 'bold',\n              color: item.type === 'user' ? 'blue' : 'black'\n            },\n            children: item.type === 'user' ? 'Tu: ' : 'Bot: '\n          }), _jsx(Text, {\n            style: styles.bot,\n            children: item.text\n          })]\n        });\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: textInput,\n      onChangeText: function onChangeText(text) {\n        return setTextInput(text);\n      },\n      placeholder: \"Haz una pregunta...\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSend,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Aplasta chcha\"\n      })\n    })]\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  body: {\n    flex: 1,\n    width: '100%'\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: 'gray',\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  button: {\n    backgroundColor: 'blue',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  bot: {\n    flex: 1\n  }\n};\nexport default ChatGPT;","map":{"version":3,"names":["React","useState","View","Text","FlatList","TextInput","TouchableOpacity","axios","jsx","_jsx","jsxs","_jsxs","ChatGPT","_useState","_useState2","_slicedToArray","data","setData","apiKey","apiUrl","_useState3","_useState4","textInput","setTextInput","handleSend","_ref","_asyncToGenerator","prompt","response","post","max_tokens","temperature","headers","text","choices","concat","_toConsumableArray","type","error","status","console","log","wait","apply","arguments","ms","Promise","resolve","setTimeout","style","styles","container","children","title","keyExtractor","item","index","toString","body","renderItem","_ref2","flexDirection","padding","fontWeight","color","bot","input","value","onChangeText","placeholder","button","onPress","buttonText","flex","alignItems","justifyContent","fontSize","marginBottom","width","height","borderWidth","borderColor","paddingHorizontal","backgroundColor","paddingVertical","borderRadius"],"sources":["C:/Users/Dani/ProgramacionMovil/Practica 3/frontend/app-ejemplo/src/components/chatgpt/ChatGPT.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, FlatList, TextInput, TouchableOpacity } from 'react-native';\r\nimport axios from 'axios';\r\n\r\n\r\nconst ChatGPT = () => {\r\n  // almacenamiento de datos\r\n  const [data, setData] = useState([]);\r\n  // configuracion del IA\r\n  const apiKey = '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';\r\n  const apiUrl = 'https://api.openai.com/v1/completions';\r\n  // texto de ingreso\r\n  const [textInput, setTextInput] = useState('');\r\n\r\n\r\n  // funcion para el chat\r\n  const handleSend = async () => {\r\n    const prompt = textInput;\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        apiUrl,\r\n        {\r\n          // Configuracion de los token\r\n          prompt: prompt,\r\n          max_tokens: 100,\r\n          temperature: 1,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const text = response.data.choices[0].text;\r\n      setData([...data, { type: 'user', text: textInput }, { type: 'bot', text: text }]);\r\n      setTextInput('');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 429) {\r\n        console.log('Llegaste al límite. Espera por favor.');\r\n        await wait(10000); // Espera 10 segundos antes de reintentar\r\n        handleSend(); // Llama a handleSend de nuevo para reintentar la solicitud\r\n      } else {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Función para esperar un período de tiempo usando promesas\r\n  const wait = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Hola soy un chat</Text>\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        style={styles.body}\r\n        renderItem={({ item }) => (\r\n          <View style={{ flexDirection: 'row', padding: 10 }}>\r\n            <Text style={{ fontWeight: 'bold', color: item.type === 'user' ? 'blue' : 'black' }}>\r\n              {item.type === 'user' ? 'Tu: ' : 'Bot: '}\r\n            </Text>\r\n            <Text style={styles.bot}>{item.text}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        value={textInput}\r\n        onChangeText={(text) => setTextInput(text)}\r\n        placeholder=\"Haz una pregunta...\"\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleSend}>\r\n        <Text style={styles.buttonText}>Aplasta chcha</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  body: {\r\n    flex: 1,\r\n    width: '100%',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: 'blue',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n  bot: {\r\n    flex: 1,\r\n  },\r\n};\r\n\r\nexport default ChatGPT;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAExC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAEpB,IAAAC,SAAA,GAAwBZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,MAAM,GAAG,qDAAqD;EACpE,IAAMC,MAAM,GAAG,uCAAuC;EAEtD,IAAAC,UAAA,GAAkCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAN,cAAA,CAAAK,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAI9B,IAAMG,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC7B,IAAMC,MAAM,GAAGL,SAAS;MAExB,IAAI;QACF,IAAMM,QAAQ,SAASrB,KAAK,CAACsB,IAAI,CAC/BV,MAAM,EACN;UAEEQ,MAAM,EAAEA,MAAM;UACdG,UAAU,EAAE,GAAG;UACfC,WAAW,EAAE;QACf,CAAC,EACD;UACEC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,cAAYd;UAC7B;QACF,CACF,CAAC;QAED,IAAMe,IAAI,GAAGL,QAAQ,CAACZ,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI;QAC1ChB,OAAO,IAAAkB,MAAA,CAAAC,kBAAA,CAAKpB,IAAI,IAAE;UAAEqB,IAAI,EAAE,MAAM;UAAEJ,IAAI,EAAEX;QAAU,CAAC,EAAE;UAAEe,IAAI,EAAE,KAAK;UAAEJ,IAAI,EAAEA;QAAK,CAAC,EAAC,CAAC;QAClFV,YAAY,CAAC,EAAE,CAAC;MAClB,CAAC,CAAC,OAAOe,KAAK,EAAE;QACd,IAAIA,KAAK,CAACV,QAAQ,IAAIU,KAAK,CAACV,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;UACnDC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;UACpD,MAAMC,IAAI,CAAC,KAAK,CAAC;UACjBlB,UAAU,CAAC,CAAC;QACd,CAAC,MAAM;UACLgB,OAAO,CAACF,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAChC;MACF;IACF,CAAC;IAAA,gBAhCKd,UAAUA,CAAA;MAAA,OAAAC,IAAA,CAAAkB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgCf;EAGD,IAAMF,IAAI,GAAG,SAAPA,IAAIA,CAAIG,EAAE,EAAK;IACnB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO;MAAA,OAAKC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC;IAAA,EAAC;EAC1D,CAAC;EAED,OACElC,KAAA,CAACT,IAAI;IAAC+C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B3C,IAAA,CAACN,IAAI;MAAC8C,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAgB,CAAM,CAAC,EAClD3C,IAAA,CAACL,QAAQ;MACPY,IAAI,EAAEA,IAAK;MACXsC,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAEC,KAAK;QAAA,OAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAChDR,KAAK,EAAEC,MAAM,CAACQ,IAAK;MACnBC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGL,IAAI,GAAAK,KAAA,CAAJL,IAAI;QAAA,OACjB5C,KAAA,CAACT,IAAI;UAAC+C,KAAK,EAAE;YAAEY,aAAa,EAAE,KAAK;YAAEC,OAAO,EAAE;UAAG,CAAE;UAAAV,QAAA,GACjD3C,IAAA,CAACN,IAAI;YAAC8C,KAAK,EAAE;cAAEc,UAAU,EAAE,MAAM;cAAEC,KAAK,EAAET,IAAI,CAAClB,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;YAAQ,CAAE;YAAAe,QAAA,EACjFG,IAAI,CAAClB,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;UAAO,CACpC,CAAC,EACP5B,IAAA,CAACN,IAAI;YAAC8C,KAAK,EAAEC,MAAM,CAACe,GAAI;YAAAb,QAAA,EAAEG,IAAI,CAACtB;UAAI,CAAO,CAAC;QAAA,CACvC,CAAC;MAAA;IACP,CACH,CAAC,EACFxB,IAAA,CAACJ,SAAS;MACR4C,KAAK,EAAEC,MAAM,CAACgB,KAAM;MACpBC,KAAK,EAAE7C,SAAU;MACjB8C,YAAY,EAAE,SAAAA,aAACnC,IAAI;QAAA,OAAKV,YAAY,CAACU,IAAI,CAAC;MAAA,CAAC;MAC3CoC,WAAW,EAAC;IAAqB,CAClC,CAAC,EACF5D,IAAA,CAACH,gBAAgB;MAAC2C,KAAK,EAAEC,MAAM,CAACoB,MAAO;MAACC,OAAO,EAAE/C,UAAW;MAAA4B,QAAA,EAC1D3C,IAAA,CAACN,IAAI;QAAC8C,KAAK,EAAEC,MAAM,CAACsB,UAAW;QAAApB,QAAA,EAAC;MAAa,CAAM;IAAC,CACpC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAG;EACbC,SAAS,EAAE;IACTsB,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBb,OAAO,EAAE;EACX,CAAC;EACDT,KAAK,EAAE;IACLuB,QAAQ,EAAE,EAAE;IACZb,UAAU,EAAE,MAAM;IAClBc,YAAY,EAAE;EAChB,CAAC;EACDnB,IAAI,EAAE;IACJe,IAAI,EAAE,CAAC;IACPK,KAAK,EAAE;EACT,CAAC;EACDZ,KAAK,EAAE;IACLY,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBJ,YAAY,EAAE,EAAE;IAChBK,iBAAiB,EAAE;EACrB,CAAC;EACDZ,MAAM,EAAE;IACNa,eAAe,EAAE,MAAM;IACvBC,eAAe,EAAE,EAAE;IACnBF,iBAAiB,EAAE,EAAE;IACrBG,YAAY,EAAE;EAChB,CAAC;EACDb,UAAU,EAAE;IACVR,KAAK,EAAE,OAAO;IACdD,UAAU,EAAE;EACd,CAAC;EACDE,GAAG,EAAE;IACHQ,IAAI,EAAE;EACR;AACF,CAAC;AAED,eAAe7D,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}