{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { OpenAIApi, Configuration } from 'openai';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar conf = new Configuration({\n  apiKey: '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'\n});\nvar openai = new OpenAIApi(conf);\nvar ChatGPT = function ChatGPT() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    prompt = _useState4[0],\n    setPrompt = _useState4[1];\n  var message = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var completion = yield openai.createCompletion({\n          model: 'text-davinci-003',\n          prompt: prompt,\n          temperature: 0.1,\n          max_tokens: 150\n        });\n        console.log(completion);\n        var result = completion.data.choices[0].text;\n        setData([].concat(_toConsumableArray(data), [{\n          type: 'user',\n          text: prompt\n        }, {\n          type: 'bot',\n          text: result\n        }]));\n        setPrompt('');\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function message() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Hola, puedes preguntarme cualquier duda!\"\n    }), _jsx(FlatList, {\n      data: data,\n      style: styles.body,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(View, {\n          children: _jsxs(Text, {\n            style: {\n              flexDirection: 'row',\n              padding: 5,\n              fontWeight: 'bold',\n              color: item.type === 'user' ? '#DE5F65' : '#1635BE'\n            },\n            children: [item.type === 'user' ? 'User: ' : 'Chat: ', item.text]\n          })\n        });\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: prompt,\n      onChangeText: function onChangeText(text) {\n        return setPrompt(text);\n      },\n      placeholder: \"Escribir algo...\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: message,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Preguntar\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  body: {\n    width: '100%'\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: 'gray',\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  button: {\n    backgroundColor: '#DE5F65',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 17,\n    textAlign: 'center'\n  }\n});\nexport default ChatGPT;","map":{"version":3,"names":["React","useState","TextInput","View","StyleSheet","Text","FlatList","TouchableOpacity","OpenAIApi","Configuration","jsx","_jsx","jsxs","_jsxs","conf","apiKey","openai","ChatGPT","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","prompt","setPrompt","message","_ref","_asyncToGenerator","completion","createCompletion","model","temperature","max_tokens","console","log","result","choices","text","concat","_toConsumableArray","type","error","apply","arguments","style","styles","container","children","title","body","renderItem","_ref2","item","flexDirection","padding","fontWeight","color","input","value","onChangeText","placeholder","button","onPress","buttonText","create","flex","alignItems","justifyContent","fontSize","marginBottom","width","height","borderWidth","borderColor","paddingHorizontal","backgroundColor","paddingVertical","borderRadius","textAlign"],"sources":["C:/Users/Dani/ProgramacionMovil/Practica 3/frontend/app-ejemplo/src/components/chatgpt/ChatGPT.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextInput, View, StyleSheet, Text, FlatList, TouchableOpacity } from \"react-native\";\r\nimport { OpenAIApi, Configuration } from 'openai'\r\n\r\nconst conf = new Configuration({\r\n    apiKey: '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'\r\n})\r\n\r\nconst openai = new OpenAIApi(conf)\r\n\r\nconst ChatGPT = () => {\r\n    const [data, setData] = useState([]);\r\n    const [prompt, setPrompt] = useState('')\r\n\r\n    const message = async () => {\r\n        try {\r\n            const completion = await openai.createCompletion({\r\n                model: 'text-davinci-003',\r\n                prompt: prompt,\r\n                temperature: 0.1,\r\n                max_tokens: 150\r\n            },\r\n            )\r\n            console.log(completion)\r\n            const result = completion.data.choices[0].text;\r\n            setData([...data, { type: 'user', text: prompt }, { type: 'bot', text: result }]);\r\n            setPrompt('');\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Hola, puedes preguntarme cualquier duda!</Text>\r\n            <FlatList\r\n                data={data}\r\n                style={styles.body}\r\n                renderItem={({ item }) => (\r\n                    <View >\r\n                        <Text style={{ flexDirection: 'row', padding: 5, fontWeight: 'bold', color: item.type === 'user' ? '#DE5F65' : '#1635BE' }}>\r\n                            {item.type === 'user' ? 'User: ' : 'Chat: '}\r\n                            {item.text}\r\n                        </Text>\r\n                    </View>\r\n\r\n                )}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                value={prompt}\r\n                onChangeText={(text) => setPrompt(text)}\r\n                placeholder=\"Escribir algo...\"\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={message}>\r\n                <Text style={styles.buttonText}>Preguntar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    body: {\r\n        width: '100%',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        height: 40,\r\n        borderWidth: 1,\r\n        borderColor: 'gray',\r\n        marginBottom: 10,\r\n        paddingHorizontal: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: '#DE5F65',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n        borderRadius: 5,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 17,\r\n        textAlign: 'center'\r\n    }\r\n})\r\n\r\nexport default ChatGPT"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}