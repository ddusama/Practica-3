{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Name = function Name() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nombre = _useState2[0],\n    setNombre = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    apellido = _useState4[0],\n    setApellido = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    view = _useState6[0],\n    setView = _useState6[1];\n  var toggleView = function toggleView() {\n    setView(!view);\n  };\n  var onClear = function onClear() {\n    setNombre(\"\");\n    setApellido(\"\");\n    setView(false);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      style: styles.name,\n      placeholder: \"Ingresar nombre\",\n      value: nombre,\n      onChangeText: function onChangeText(text) {\n        return setNombre(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.name,\n      placeholder: \"Ingresar apellido\",\n      value: apellido,\n      onChangeText: function onChangeText(text) {\n        return setApellido(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: toggleView,\n      children: _jsx(Text, {\n        style: styles.textButton,\n        children: \"Aceptar\"\n      })\n    }), view && _jsx(View, {\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Hola \" + nombre + \" \" + apellido + \" \"\n      })\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        style: styles.clear,\n        onPress: onClear,\n        children: _jsx(Text, {\n          style: styles.textButton,\n          children: \"Limpiar\"\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  name: {\n    color: \"black\",\n    fontSize: 20,\n    marginTop: 20,\n    marginLeft: 20,\n    marginRight: 20,\n    marginBottom: 20,\n    fontWeight: '400',\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 3,\n    borderColor: \"black\"\n  },\n  button: {\n    borderWidth: 1,\n    borderColor: '#DE5F65',\n    backgroundColor: '#DE5F65',\n    padding: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    borderRadius: 7\n  },\n  textButton: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  text: {\n    color: \"black\",\n    fontSize: 18,\n    marginTop: 20,\n    fontWeight: '600',\n    padding: 4,\n    paddingRight: 12,\n    textAlign: 'center'\n  },\n  clear: {\n    borderWidth: 1,\n    borderColor: 'blue',\n    backgroundColor: 'blue',\n    padding: 10,\n    marginLeft: 400,\n    marginRight: 400,\n    marginTop: 20,\n    borderRadius: 7\n  }\n});\nexport default Name;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","Name","_useState","_useState2","_slicedToArray","nombre","setNombre","_useState3","_useState4","apellido","setApellido","_useState5","_useState6","view","setView","toggleView","onClear","children","style","styles","name","placeholder","value","onChangeText","text","button","onPress","textButton","clear","create","color","fontSize","marginTop","marginLeft","marginRight","marginBottom","fontWeight","paddingLeft","borderWidth","borderRadius","borderColor","backgroundColor","padding","textAlign","paddingRight"],"sources":["C:/Users/Dani/ProgramacionMovil/Practica 3/frontend/app-ejemplo/src/components/name/Name.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from \"react-native\";\r\n\r\nconst Name = () => {\r\n\r\n    const [nombre, setNombre] = useState('');\r\n    const [apellido, setApellido] = useState('');\r\n    const [view, setView] = useState(false);\r\n\r\n    const toggleView = () => {\r\n        setView(!view);\r\n    };\r\n\r\n    const onClear = () => {\r\n        setNombre(\"\");\r\n        setApellido(\"\");\r\n        setView(false);\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <TextInput style={styles.name}\r\n                placeholder=\"Ingresar nombre\"\r\n                value={nombre}\r\n                onChangeText={(text) => setNombre(text)} />\r\n            <TextInput style={styles.name}\r\n                placeholder=\"Ingresar apellido\"\r\n                value={apellido}\r\n                onChangeText={(text) => setApellido(text)} />\r\n            <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={toggleView}\r\n            >\r\n                <Text style={styles.textButton}>Aceptar</Text>\r\n            </TouchableOpacity>\r\n            {view && (\r\n                <View>\r\n                    <Text style={styles.text}>{\"Hola \" + nombre + \" \" + apellido + \" \"}</Text>\r\n                </View>\r\n            )}\r\n            <View>\r\n                <TouchableOpacity\r\n                    style={styles.clear}\r\n                    onPress={onClear}\r\n                >\r\n                    <Text style={styles.textButton}>Limpiar</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    name: {\r\n        color: \"black\",\r\n        fontSize: 20,\r\n        marginTop: 20,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        marginBottom: 20,\r\n        fontWeight: '400',\r\n        paddingLeft: 10,\r\n        borderWidth: 1,\r\n        borderRadius: 3,\r\n        borderColor: \"black\",\r\n    }, button: {\r\n        borderWidth: 1,\r\n        borderColor: '#DE5F65',\r\n        backgroundColor: '#DE5F65',\r\n        padding: 10,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        borderRadius: 7,\r\n    }, textButton: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textAlign: 'center'\r\n    }, text: {\r\n        color: \"black\",\r\n        fontSize: 18,\r\n        marginTop: 20,\r\n        fontWeight: '600',\r\n        padding: 4,\r\n        paddingRight: 12,\r\n        textAlign: 'center'\r\n    }, clear: {\r\n        borderWidth: 1,\r\n        borderColor: 'blue',\r\n        backgroundColor: 'blue',\r\n        padding: 10,\r\n        marginLeft: 400,\r\n        marginRight: 400,\r\n        marginTop: 20,\r\n        borderRadius: 7\r\n    }\r\n})\r\n\r\nexport default Name;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}